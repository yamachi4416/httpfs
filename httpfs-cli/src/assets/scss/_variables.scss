@import '@picocss/pico/scss/variables';

@mixin media-less-sm {
  @if map-get($breakpoints, 'sm') {
    @media (max-width: map-get($breakpoints, 'sm')) {
      @content;
    }
  }
}

@mixin media-less-md {
  @if map-get($breakpoints, 'md') {
    @media (max-width: map-get($breakpoints, 'sm')) {
      @content;
    }
  }
}

@mixin card {
  padding: calc(var(--spacing) * 1.5);
  margin: var(--block-spacing-vertical) 0;
  background: var(--card-background-color);
  border-radius: calc(var(--border-radius) * 2);
  box-shadow: var(--card-box-shadow);
}

@mixin table {
  display: table;
  min-width: 100%;

  & > .thead,
  & > .tbody {
    display: table-row-group;
    width: 100%;

    & > * {
      display: table-row;

      & > * {
        display: table-cell;
        vertical-align: middle;
        background-color: var(--background-color);

        & > * {
          padding: calc(var(--spacing) / 2);
        }
      }
    }
  }

  & > .thead {
    & > * {
      & > * {
        border-bottom: var(--border-width) solid var(--table-border-color);

        :where(.icon),
        :where(.icons)::after,
        :where(.icons)::before {
          font-size: 1em;
        }

        :where(.icons) {
          &::after {
            width: 1em;
            content: '';
          }

          &[data-sort='asc']::after {
            content: 'south';
          }

          &[data-sort='desc']::after {
            content: 'north';
          }
        }
      }
    }
  }

  &:where(.sticky) {
    padding-block-end: var(--spacing);

    > .thead {
      position: sticky;
      top: 0;
      z-index: 2;
    }

    & > * > * > * {
      &:first-child {
        padding-inline-start: calc(var(--spacing) / 2);
      }

      &:last-child {
        padding-inline-end: calc(var(--spacing) / 2);
      }
    }
  }
}

@mixin fill-height {
  height: var(--vh, 100vh);
}

@mixin fill-content {
  width: 100vw;
  height: var(--vh, 100vh);
}
